program SelfTest;

var
  Tests, Passed, Failed: Integer;

procedure BeginTest(S: String);
begin
  Write(S, ' ');
  Tests := Tests + 1;
end;

procedure EndTest;
begin
  WriteLn;
end;

procedure Pass;
begin
  Write('.');
  Passed := Passed + 1;
end;

procedure Fail;
begin
  Failed := Failed + 1;
end;

procedure AssertInteger(S: String; Expected, Actual: Integer);
begin
  if Actual = Expected then
    Pass
  else
  begin
    Fail;
    WriteLn;
    WriteLn('> ', S, ', expected=', Expected, ', actual=', Actual);
  end;
end;

procedure AssertBoolean(S: String; Expected, Actual: Boolean);
begin
  if Actual = Expected then
    Pass
  else
  begin
    Fail;
    WriteLn('> ', S, ', expected=', Expected, ', actual=', Actual);
  end;
end;

procedure AssertChar(S: String; Expected, Actual: Char);
begin
  if Actual = Expected then
    Pass
  else
  begin
    Fail;
    WriteLn('> ', S, ', expected=', Expected, ', actual=', Actual);
  end;
end;

procedure AssertByte(S: String; Expected, Actual: Byte);
begin
  if Actual = Expected then
    Pass
  else
  begin
    Fail;
    WriteLn('> ', S, ', expected=', Expected, ', actual=', Actual);
  end;
end;

procedure Header;
begin
  WriteLn('PL/0 Self Test Suite');
  WriteLn;

  Tests := 0; Passed := 0; Failed := 0;
end;

procedure Footer;
begin
  WriteLn;
  WriteLn('Test cases:', Tests);
  WriteLn('Assertions:', Passed + Failed);
  WriteLn('Passed    :', Passed);
  WriteLn('Failed    :', Failed);
  WriteLn;

  WriteLn('************');
  if Failed = 0 then WriteLn('*** PASS ***') else WriteLn('*** FAIL ***');
  WriteLn('************');
end;

(*$i tests/expr.pl0     *)

(*$i tests/relops.pl0   *)
(*$i tests/logops.pl0   *)
(*$i tests/bitops.pl0   *)

(*$i tests/while.pl0    *)
(*$i tests/repeat.pl0   *)
(*$i tests/for.pl0      *)

(*$i tests/odd.pl0      *)
(*$i tests/ord.pl0      *)

begin
  Header;

  TestAdd;
  TestSubtract;
  TestMultiply;
  TestDivide;
  TestModulus;
  TestNested;

  TestRelOps;
  TestLogOps;
  TestBitOps;

  TestWhile;
  TestRepeat;
  TestFor;

  TestOdd;
  TestOrd;

  Footer;
end.