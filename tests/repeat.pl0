procedure TestRepeat;
var
  I, J, K: Integer;
begin
  BeginTest('TestRepeat');

  repeat
    (* Empty *)
  until True;

  AssertInteger('Empty loop', 1, 1);

  I := 0;
  repeat
    I := I + 1;
  until True;

  AssertInteger('Minimum iterations', 1, I);

  I := 0; J := 0;
  repeat
    J := J + 1;
    I := I + J;
  until J = 10;

  AssertInteger('Simple loop J', 10, J);
  AssertInteger('Simple loop I', 55, I);

  I := 0;
  J := 0;
  repeat
    J := J + 1;
    K := 0;
    repeat
      K := K + 1;
      I := I + J * K;
    until K = 20;
  until J = 10;

  AssertInteger('Nested loop K', 20, K);
  AssertInteger('Nested loop J', 10, J);
  AssertInteger('Nested loop I', 11550, I);

  I := 0; J := 0;
  repeat
    J := J + 1;
    if J = 4 then Continue;
    if J = 8 then Break;
    I := I + J;
  until J = 10;
  
  AssertInteger('Break/continue J', 8, J);
  AssertInteger('Break/continue I', 24, I);

  EndTest;
end;
